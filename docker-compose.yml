version: '3.8'
services:
  # RABBITMQ
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  # LOAD BALANCER
  load_balancer:
    build: ./loadbalancer
    container_name: load_balancer
    ports:
      - "80:80"
    depends_on:
      - auth
      - user
      - product
      # - order
      # - notification
    networks:
      - default

  # SERVICES
  auth:
    build: ./auth
    container_name: auth_service
    ports:
      - "5000:5000"
    depends_on:
      - auth_db
    networks:
      - default
  user:
    build: ./user
    container_name: user_service
    ports:
      - "5001:5001"
    depends_on:
      - rabbitmq
      - user_db
    networks:
      - default
    env_file:
      - ./user/.env
  product:
    build: ./product
    container_name: product_service
    ports:
      - "5002:5002"
    volumes:
      - product_data:/app/data
    networks:
      - default

  # DATABASES
  auth_db:
    image: mysql:latest
    container_name: auth_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ms_auth
    ports:
      - "3308:3306"   
    volumes:
      - ./auth/init:/docker-entrypoint-initdb.d
  user_db:
    image: mysql:latest
    container_name: user_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ms_user
    ports:
      - "3307:3306"
    volumes:
      - ./user/init:/docker-entrypoint-initdb.d
      
  # KONG
  kong:
    image: kong:latest
    container_name: kong
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
      - ./kong/kong.yml:/usr/local/kong/declarative/kong.yml
    depends_on:
      - auth
      - user

  # OBSERVABILITY
  # loki:
  #   image: grafana/loki:2.8.0
  #   container_name: loki
  #   ports:
  #     - "3100:3100"
  #   volumes:
  #     - ./loki-config.yaml:/etc/loki/loki-config.yaml

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - loki
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana-data:/var/lib/grafana

# VOLUMES
volumes:
  product_data:
  # grafana-data:
# NETWORKS
networks:
  default:
    name: my_network